<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.ManagerMapper">

	<select id="findUser" resultType="com.example.demo.vo.UserJoin">
		SELECT * FROM userjoin
	</select>
	
	<select id="userList" resultType="com.example.demo.vo.UserJoin">
		SELECT * FROM userjoin
	</select>
	
	<select id="userDetail" parameterType="string" resultType="com.example.demo.vo.UserJoin">
		SELECT * FROM userjoin WHERE userid=#{userid, jdbcType=VARCHAR}
	</select>
	
	<select id="userBoard" parameterType="string" resultType="com.example.demo.vo.Freeboard">
		SELECT * FROM free_board WHERE author=#{userid, jdbcType=VARCHAR}
	</select>
	
	<select id="boardDetail" parameterType="int" resultType="com.example.demo.vo.Freeboard">
		SELECT * FROM free_board WHERE fbnum=#{fbnum}
	</select>
	
	<delete id="useridDel" parameterType="String">
		DELETE userjoin WHERE userid=#{userid jdbcType=VARCHAR}
	</delete>
	
	<select id="shop1" parameterType="string" resultType="com.example.demo.vo.Shop">
		<![CDATA[
		SELECT *
		FROM 
 		(
 			 SELECT *
 			 FROM shop
 			 WHERE status=#{status jdbcType=VARCHAR}
  			 ORDER BY ordernum DESC
 		)
		WHERE ROWNUM <= 3
		]]>
	</select>
	<select id="shop2" parameterType="string" resultType="com.example.demo.vo.Shop">
		<![CDATA[
		SELECT *
		FROM 
 		(
 			 SELECT *
 			 FROM shop
 			 WHERE status=#{status jdbcType=VARCHAR}
  			 ORDER BY ordernum DESC
 		)
		WHERE ROWNUM <= 3
		]]>
	</select>
	<select id="shop3" parameterType="string" resultType="com.example.demo.vo.Shop">
		<![CDATA[
		SELECT *
		FROM 
 		(
 			 SELECT *
 			 FROM shop
 			 WHERE status=#{status jdbcType=VARCHAR}
  			 ORDER BY ordernum DESC
 		)
		WHERE ROWNUM <= 3
		]]>
	</select>
	<select id="shop4" parameterType="string" resultType="com.example.demo.vo.Shop">
		<![CDATA[
		SELECT *
		FROM 
 		(
 			 SELECT *
 			 FROM shop
 			 WHERE status=#{status jdbcType=VARCHAR}
  			 ORDER BY ordernum DESC
 		)
		WHERE ROWNUM <= 3
		]]>
	</select>
	<select id="getshop" parameterType="string" resultType="com.example.demo.vo.Shop">
		SELECT ordernum, userid, itemname, quantity, totalprice, to_char(pdate, 'YYYY. MM. DD') AS pdate, status
		FROM shop
 		WHERE status=#{status jdbcType=VARCHAR}
  		ORDER BY ordernum ASC
	</select>
	<select id="shopdetail" parameterType="int" resultType="com.example.demo.vo.Shop">
		SELECT ordernum, userid, itemname, quantity, totalprice, to_char(pdate, 'YYYY. MM. DD') AS pdate, status, price, itempoint, address 
		FROM shop
 		WHERE ordernum=#{ordernum jdbcType=NUMBER}
	</select>
	<update id="shopUpdate" parameterType="com.example.demo.vo.Shop">
		UPDATE shop SET status=#{status, jdbcType=VARCHAR}
		WHERE ordernum=#{ordernum}
	</update>
	<select id="shopitem" resultType="com.example.demo.vo.GoodsAndAtt">
		select goodsnum, mainpic_server, goodsname from 
        (
           select  g.category, g.goodsnum, g.price, g.goodsname, t.mainpic_server from goods g left outer join addgoods_att t on g.goodsnum=t.goodsnum 
                 GROUP BY  g.category, g.goodsnum, g.price, g.goodsname, t.mainpic_server
        )
       	ORDER BY goodsnum
	</select>
	<select id="getitem" parameterType="int" resultType="com.example.demo.vo.GoodsAndAtt">
		select goodsnum, mainpic_server, goodsname from 
        (
          	select  
           		g.category, g.goodsnum, g.price, g.goodsname, t.mainpic_server 
           	from goods g left outer join addgoods_att t on g.goodsnum=t.goodsnum 
                 GROUP BY  g.category, g.goodsnum, g.price, g.goodsname, t.mainpic_server
        )
        WHERE goodsnum=#{goodsnum}
       	ORDER BY goodsnum
	</select>
</mapper>